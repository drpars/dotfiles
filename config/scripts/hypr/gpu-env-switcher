#!/bin/bash

# Safer script execution
set -euo pipefail

# Configuration
CONFIG_FILE="${HOME}/.config/hypr/conf/gpu-env.conf"
GFX_MODE=$(supergfxctl -g 2>/dev/null || echo "unknown")

# Create config directory if missing
mkdir -p "${HOME}/.config/hypr/conf"

# Clear previous config
>"${CONFIG_FILE}"

# Check NVIDIA ICDs (with sudo validation)
if [ ! -f /usr/share/vulkan/icd.d/nvidia_icd.json ] && [ -f /usr/share/vulkan/icd.d/nvidia_icd.json_inactive ]; then
  sudo ln -svf /usr/share/vulkan/icd.d/nvidia_icd.json_inactive /usr/share/vulkan/icd.d/nvidia_icd.json
fi

case "${GFX_MODE}" in
"AsusMuxDgpu")
  # NVIDIA dGPU-only configuration
  cat <<EOF | tee "${CONFIG_FILE}" >/dev/null
# NVIDIA dGPU Mode Configuration (AsusMuxDgpu)
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = LIBVA_DRIVER_NAME,nvidia
env = NVD_BACKEND,direct
# env = cursor:no_hardware_cursors
# env = WLR_NO_HARDWARE_CURSORS,1
env = WLR_DRM_NO_ATOMIC,1

# Monitor configuration
env = __GL_GSYNC_ALLOWED,1
env = __GL_VRR_ALLOWED,0
EOF
  ;;

"Integrated")
  # For Integrated mode (AMD iGPU)
  cat <<EOF | tee "${CONFIG_FILE}" >/dev/null
# AMD iGPU Configuration
env = AQ_DRM_DEVICES,/dev/dri/card1
env = LIBVA_DRIVER_NAME,radeonsi
env = VK_ICD_FILENAMES,/usr/share/vulkan/icd.d/radeon_icd.x86_64.json

# Optional AMD performance tweaks
env = AMD_DEBUG,noopt,nohyperz
env = RADV_PERFTEST,gpl,nggc
EOF
  ;;

*)
  # Hybrid/Default configuration
  cat <<EOF | tee "${CONFIG_FILE}" >/dev/null
# Hybrid Configuration (AMD + NVIDIA)
env = AQ_DRM_DEVICES,/dev/dri/card1:/dev/dri/card0

# VA-API: Use AMD for decoding
env = LIBVA_DRIVER_NAME,radeonsi

# Vulkan: Both drivers
env = VK_ICD_FILENAMES,/usr/share/vulkan/icd.d/radeon_icd.x86_64.json:/usr/share/vulkan/icd.d/nvidia_icd.json_inactive
EOF
  ;;
esac

# Set proper permissions
chmod 600 "${CONFIG_FILE}"
